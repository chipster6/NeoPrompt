name: docker-publish
on:
  push:
    branches: ["main", "master"]
  tags:
    - "v*.*.*"
permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_API: ${{ github.repository_owner }}/neoprompt-api
  IMAGE_NGINX: ${{ github.repository_owner }}/neoprompt-nginx

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (API)
        id: meta_api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_API }}
          tags: |
            type=raw,value=edge,enable=${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
            type=sha,format=short,enable=${{ github.ref_type == 'branch' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Docker meta (NGINX)
        id: meta_nginx
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NGINX }}
          tags: |
            type=raw,value=edge,enable=${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
            type=sha,format=short,enable=${{ github.ref_type == 'branch' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Build and push NGINX image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: nginx/Dockerfile
          push: true
          tags: ${{ steps.meta_nginx.outputs.tags }}
          labels: ${{ steps.meta_nginx.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
