name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bandit-enabled: ["0", "1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements*.txt

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt ruff mypy pytest

      - name: Backend lint/type/test
        env:
          PYTHONPATH: ${{ github.workspace }}
          MYPYPATH: ${{ github.workspace }}
          BANDIT_ENABLED: ${{ matrix.bandit-enabled }}
        run: |
          ruff check backend
          mypy -p backend
          pytest -q

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Frontend setup, test, and build
        env:
          CI: true
        run: |
          cd frontend
          npm ci
          if npm run | grep -q "test:ci"; then npm run test:ci; else npm test -- --run; fi
          npx tsc --noEmit
          npx eslint . || true
          npm run build

      - name: Docker build images
        run: |
          docker build -t neprompt-api:ci ./backend
          docker build -t neprompt-nginx:ci -f nginx/Dockerfile .
