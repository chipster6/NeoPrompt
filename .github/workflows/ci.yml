name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bandit-enabled: ["0", "1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements*.txt

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt ruff mypy pytest

      - name: Backend lint/type/test (exclude SDK tests)
        env:
          PYTHONPATH: ${{ github.workspace }}
          MYPYPATH: ${{ github.workspace }}
          BANDIT_ENABLED: ${{ matrix.bandit-enabled }}
        run: |
          ruff check backend
          mypy -p backend
          # Run only backend/CLI tests here; SDK tests run after SDK install
          pytest -q tests/cli

      - name: CLI help smoke test
        run: python -m backend.cli.neoprompt --help

      - name: Python SDK - install (editable) and tests
        run: |
          pip install -e sdk/python/neoprompt
          pytest -q tests/sdk_python

      - name: Run RulePacks tests (JUnit)
        env:
          PYTHONPATH: ${{ github.workspace }}
          MYPYPATH: ${{ github.workspace }}
        run: |
          mkdir -p reports/rulepacks
          pytest -q tests/rulepacks --junitxml=reports/rulepacks/junit.xml || true

      - name: Gate B — enforce pass-rate ≥95% and >0 tests
        run: |
          python3 scripts/enforce_rulepacks_gate.py

      - name: Upload RulePacks JUnit report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-rulepacks
          path: reports/rulepacks/junit.xml

      - name: Set up Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Frontend setup, test, and build
        env:
          CI: true
        run: |
          cd frontend
          npm ci
          if npm run | grep -q "test:ci"; then npm run test:ci; else npm test -- --run; fi
          npx tsc --noEmit
          npx eslint . || true
          npm run build

      - name: TypeScript SDK - build
        working-directory: sdk/typescript
        run: |
          npm ci
          npm run build

      - name: Docker build images
        run: |
          docker build -t neprompt-api:ci -f backend/Dockerfile .
          docker build -t neprompt-nginx:ci -f nginx/Dockerfile .
